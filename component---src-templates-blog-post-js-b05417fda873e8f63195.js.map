{"version":3,"file":"component---src-templates-blog-post-js-b05417fda873e8f63195.js","mappings":"4QAEqBA,EAAAA,SAAAA,GAEjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,WAAaC,EAAAA,YAFH,CAGlB,EALgBH,EAAAA,EAAAA,GAAAA,EAAAA,GAKhB,kBAqBA,OArBA,EAEDI,kBAAA,WACI,IAAIC,EAAWC,SAASC,cAAc,UACtCF,EAASG,aAAa,MAAO,iCAC7BH,EAASG,aAAa,cAAe,aACrCH,EAASG,aAAa,SAAS,GAC/BH,EAASG,aAAa,OAAQ,0CAC9BH,EAASG,aAAa,aAAc,YACpCH,EAASG,aAAa,QAAS,gBAC/BC,KAAKP,WAAWQ,QAAQC,YAAYN,EACvC,IAEDO,OAAA,WACI,OACI,uBAAKC,GAAG,WAAWC,UAAU,uBACzB,sBAAIA,UAAU,QAAd,YAA+B,IAC/B,sBAAIA,UAAU,SACd,uBAAKC,IAAKN,KAAKP,WAAYY,UAAU,gBAGhD,IA1BgBd,CAAiBgB,EAAAA,WCkEzBC,EAAO,SAAC,GAAwC,IAAdC,EAAa,EAArCC,KAAQC,eAC7B,OACE,gBAAC,IAAD,CACEC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAGvD,EAED,EApEyB,SAAC,GAGnB,IAAD,MAFJL,KAAQM,EAEJ,EAFIA,SAAUC,EAEd,EAFcA,KAAMC,EAEpB,EAFoBA,KAAsBT,EAE1C,EAF0BE,eAC9BQ,EACI,EADJA,SAEMC,GAAY,UAAAF,EAAKG,oBAAL,eAAmBT,QAAnB,QACZU,GAAoBC,EAAAA,EAAAA,GAASd,EAAKI,YAAYW,cAAcC,KAElE,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUP,MAAOQ,GACjC,2BACEf,UAAU,YACVqB,WAAS,EACTC,SAAS,6BAET,8BACE,gBAAC,EAAAC,EAAD,CAAaC,MAAOP,EAAmBQ,IAAKrB,EAAKI,YAAYW,cAAcM,MAC3E,sBAAIC,SAAS,YAAYtB,EAAKI,YAAYD,OAC1C,yBAAIH,EAAKI,YAAYmB,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQzB,EAAK0B,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK1B,UAAU,iBACb,sBACE+B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGzB,GACC,gBAAC,EAAA0B,KAAD,CAAMC,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAApC,KACK9B,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAyB,KAAD,CAAMC,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKJ,YAAYD,MADpB,SAOR,gBAACrB,EAAD,MAGL,C","sources":["webpack://daniel-talks-code/./src/components/comments.js","webpack://daniel-talks-code/./src/templates/blog-post.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Comments extends Component {\n\n    constructor(props) {\n        super(props);\n        this.commentBox = React.createRef();\n    }\n\n    componentDidMount () {\n        let scriptEl = document.createElement(\"script\");\n        scriptEl.setAttribute(\"src\", \"https://utteranc.es/client.js\");\n        scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\n        scriptEl.setAttribute(\"async\", true);\n        scriptEl.setAttribute(\"repo\", \"danpgomez/danieltalkscode.com-comments\");\n        scriptEl.setAttribute(\"issue-term\", \"pathname\");\n        scriptEl.setAttribute(\"theme\", \"github-light\");\n        this.commentBox.current.appendChild(scriptEl);\n    }\n\n    render() {\n        return (\n            <div id=\"comments\" className=\"comment-box-wrapper\">\n                <h1 className=\"mb-0\">Comments {''}</h1>\n                <hr className=\"my-0\"/>\n                <div ref={this.commentBox} className=\"comment-box\"/>\n            </div>\n        );\n    }\n}\n\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/comments\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const postFeaturedImage = getImage(post.frontmatter.featuredImage.src)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <GatsbyImage image={postFeaturedImage} alt={post.frontmatter.featuredImage.alt}/>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Comments />\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          src {\n            childImageSharp {\n              gatsbyImageData(\n                aspectRatio: 1.7\n                placeholder: BLURRED\n                blurredOptions: {width: 100}\n                transformOptions: {cropFocus: CENTER}\n                formats: AUTO\n              )\n            }\n          }\n          alt\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Comments","props","commentBox","React","componentDidMount","scriptEl","document","createElement","setAttribute","this","current","appendChild","render","id","className","ref","Component","Head","post","data","markdownRemark","title","frontmatter","description","excerpt","previous","next","site","location","siteTitle","siteMetadata","postFeaturedImage","getImage","featuredImage","src","itemScope","itemType","G","image","alt","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}